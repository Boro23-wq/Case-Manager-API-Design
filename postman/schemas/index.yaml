openapi: "3.0.0"
info:
    version: "1.0.0"
    title: "Case Manager API"
    description: The API retrieves information about case managers and their cases.
    contact:
        name: Sintu Boro
        email: sb394@njit.edu
        url: https://sboro.vercel.app/

servers:
    - description: Postman API for case managers
      url: http://localhost:3000
tags:
    - name: case-manager
      description: API endpoints to access case managers in the system

paths:
    /caseManagers:
        # @POST /caseManagers
        post:
            tags:
                - case-manager
            summary: Create a case manager.
            description: Creates a new case manager using the required fields and adds it to the system.
            operationId: createCaseManager

            responses:
                "201":
                    description: Successfully created case manager.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/CaseManager"
                "400":
                    description: Bad request. The fields are required.
                "500":
                    description: Internal Server Error. Please try again later

            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CaseManager"
                description: Created case manager object
                required: true

        # @GET /caseManagers
        get:
            tags:
                - case-manager
            summary: Find all case managers.
            description: Get all the case managers and their cases.
            operationId: getCaseManagers

            responses:
                "200":
                    description: Successfully retrieved all the case managers.
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/CaseManager"
                "400":
                    description: Bad request.
                "500":
                    description: Internal Server Error. Please try again later

    /caseManager/{id}:
        # @GET /caseManager/{id}
        get:
            tags:
                - case-manager
            summary: Find case manager by ID.
            description: Returns a single case manager
            operationId: getCaseManagerByID
            parameters:
                - name: id
                  in: path
                  description: ID of case manager to return
                  required: true
                  schema:
                      type: integer
                      format: uuid
            responses:
                "200":
                    description: Successfully retrieved case manager
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/CaseManager"
                "400":
                    description: Invalid ID supplied
                "404":
                    description: Case manager with the ID not found

        # @PUT /caseManager/{id}
        put:
            tags:
                - case-manager
            summary: Update a case manager.
            description: Update details of a case manager using ID.
            operationId: updateCaseManager
            parameters:
                - name: id
                  in: path
                  description: The id of the case manager that needs to be updated
                  required: true
                  schema:
                      type: integer
                      format: uuid

            responses:
                "201":
                    description: Successfully created case manager.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/CaseManager"
                "400":
                    description: Invalid case manager supplied
                "404":
                    description: Case manager not found

            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CaseManager"
                description: Updated user object
                required: true

        # @DELETE /caseManager/{id}
        delete:
            tags:
                - case-manager
            summary: Delete a case manager.
            description: Delete an existing case manager.
            operationId: deleteCaseManager
            parameters:
                - name: id
                  in: path
                  description: The id of the case manager that needs to be deleted
                  required: true
                  schema:
                      type: integer
                      format: uuid
            responses:
                "204":
                    description: Case manager deleted sucessfully
                    content:
                        application/json:
                            schema:
                                type: string
                                format: uuid
                                example: "290cdddc-31af-481c-9000-2ab4eabeebaf"
                "400":
                    description: Invalid id supplied
                "404":
                    description: Case manager not found

# Reusable component schemas
components:
    schemas:
        # CaseManager schema
        CaseManager:
            type: object
            properties:
                id:
                    type: string
                    format: uuid
                    example: "378cdddc-31af-481c-9000-2ab4eabeebaf"
                createdAt:
                    type: string
                    format: date-time
                    example: "2021-01-30T08:30:00Z"
                modifiedAt:
                    type: string
                    format: date-time
                    example: "2021-01-31T08:30:00Z"
                username:
                    type: string
                    example: "johndoe"
                firstName:
                    type: string
                    example: "John"
                lastName:
                    type: string
                    example: "Doe"
                phone:
                    type: integer
                    example: 8623817665
                email:
                    type: string
                    format: email
                    example: "johndoe@cm.io"
                cases:
                    type: array
                    items:
                        $ref: "#/components/schemas/Case"

            required:
                - username
                - firstName
                - lastName
                - email
                - phone

        # Case schema
        Case:
            type: object
            properties:
                caseId:
                    type: string
                    format: uuid
                    example: "36005a82-a612-4dc1-9279-7215df6895cd"
                createdAt:
                    type: string
                    format: date-time
                    example: "2021-03-30T08:30:00Z"
                modifiedAt:
                    type: string
                    format: date-time
                    example: "2021-04-28T08:30:00Z"
                assignedTo:
                    type: object
                    nullable: true
                    items:
                        $ref: "#/components/schemas/Assignee"
                severity:
                    type: string
                    example: "0-Critical Impact"
                subject:
                    type: string
                    example: "Operation follow-up"
                patientID:
                    type: string
                    format: uuid
                    example: "6c47da92-4b6a-431c-8cbe-78f8d386625f"
        
        # Assignee schema
        Assignee:
            type: object
            properties:
                id:
                    type: string
                    format: uuid
                    example: "205605a82-a612-4dc1-9279-7215df6895cd"
                firstName:
                    type: string
                    example: "Katherine"
                lastName:
                    type: string
                    example: "Marshall"
                assignedOn:
                    type: string
                    format: date-time
                    example: "2021-03-30T08:30:00Z"
                phone:
                    type: integer
                    example: 8452877665
                email:
                    type: string
                    format: email
                    example: "kathmarshall@hm.io"

