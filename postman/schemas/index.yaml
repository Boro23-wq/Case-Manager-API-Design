openapi: "3.0.0"
info:
    version: "1.0.0"
    title: "Case Manager API"
    description: The API retrieves information about case managers and their cases.
    contact:
        name: Sintu Boro
        email: sb394@njit.edu
        url: https://sboro.vercel.app/

servers:
    - description: Postman API for case managers
      url: http://localhost:3000
    
tags:
    - name: case-manager
      description: API endpoints to access case managers in the system
    - name: case
      description: API endpoints to access cases in the system

paths:
    # Case Manager endpoints
    /casemanagers:
        description: API endpoints for case managers.
        # @POST /casemanagers
        post:
            tags:
                - case-manager
            summary: Create a case manager.
            description: Create a new case manager using the input provided and add it to the system.
            operationId: createCaseManager

            responses:
                "201":
                    description: Successfully created case manager.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/CaseManager"
                "400":
                    description: Bad request. Required fields are missing.
                "404":
                    description: Not found.
                "500":
                    description: Internal Server Error. Please try again later

            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CaseManager"
                description: Created case manager object.
                required: true

        # @GET /casemanagers
        get:
            tags:
                - case-manager
            summary: Find all case managers.
            description: Get all the case managers and their cases recorded in the system.
            operationId: getCaseManagers
            parameters:
                - name: page
                  in: query
                  description: Page number to paginate.
                  schema:
                      type: integer
                      default: 1
                - name: perPage
                  in: query
                  description: Total items to retrive at once.
                  schema:
                      type: integer
                      default: 10

            responses:
                "200":
                    description: Successfully retrieved all the case managers.
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/CaseManager"
                "400":
                    description: Bad request.
                "404":
                    description: Not found.
                "500":
                    description: Internal Server Error. Please try again later.

    /casemanagers/{id}:
        # @GET /casemanager/{id}
        get:
            tags:
                - case-manager
            summary: Find case manager by ID.
            description: Returns a single case manager with the provided ID.
            operationId: getCaseManagerByID
            parameters:
                - name: id
                  in: path
                  description: ID of case manager to return.
                  required: true
                  schema:
                      type: integer
                      format: int64
            responses:
                "200":
                    description: Successfully retrieved case manager.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/CaseManager"
                "400":
                    description: Sorry! Couldn't find case manager with the ID provided.
                "404":
                    description: Sorry! Case manager with the ID not found.
                "500":
                    description: Internal server error. Please try again later.

        # @PUT /casemanager/{id}
        put:
            tags:
                - case-manager
            summary: Update a case manager.
            description: Update details of a case manager using ID.
            operationId: updateCaseManager
            parameters:
                - name: id
                  in: path
                  description: ID of the case manager to be updated.
                  required: true
                  schema:
                      type: integer
                      format: int64

            responses:
                "201":
                    description: Successfully updated case manager with the provided ID.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/CaseManager"
                "400":
                    description:  Sorry! Couldn't find case manager with the ID provided.
                "404":
                    description: Sorry! Case manager with the ID not found.
                "500":
                    description: Internal server error. Please try again later.

            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CaseManager"
                description: Updated case manager object with the ID provided.
                required: true

        # @DELETE /casemanager/{id}
        delete:
            tags:
                - case-manager
            summary: Delete a case manager.
            description: Delete an existing case manager.
            operationId: deleteCaseManager
            parameters:
                - name: id
                  in: path
                  description: ID of the case manager to be deleted.
                  required: true
                  schema:
                      type: integer
                      format: int64
            responses:
                "204":
                    description: Case manager deleted sucessfully.
                    content:
                        application/json:
                            schema:
                                type: string
                                format: int64
                                example: "290cdddc-31af-481c-9000-2ab4eabeebaf"
                "400":
                    description: Sorry! Couldn't find case manager with the ID provided.
                "404":
                    description: Sorry! Case manager with the ID not found.
                "500":
                    description: Internal server error. Please try again later.

    # Case endpoints
    /cases:
        description: API endpoints for cases.
        # @POST /cases
        post:
            tags:
                - case
            summary: Create a case.
            description: Create a new case using the input provided and add it to the system.
            operationId: createCase

            responses:
                "201":
                    description: Successfully created case.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Case"
                "400":
                    description: Bad request. Required fields are missing.
                "404":
                    description: Not found.
                "500":
                    description: Internal Server Error. Please try again later

            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Case"
                description: Created case object.
                required: true

        # @GET /cases
        get:
            tags:
                - case
            summary: Find all cases.
            description: Get all the cases recorded in the system.
            operationId: getCases
            parameters:
                - name: page
                  in: query
                  description: Page number to paginate.
                  schema:
                      type: integer
                      default: 1
                - name: perPage
                  in: query
                  description: Total items to retrive at once.
                  schema:
                      type: integer
                      default: 10

            responses:
                "200":
                    description: Successfully retrieved all the cases.
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/components/schemas/Case"
                "400":
                    description: Bad request.
                "404":
                    description: Not found.
                "500":
                    description: Internal Server Error. Please try again later.


    /cases/{id}:
        # @GET /cases/{id}
        get:
            tags:
                - case
            summary: Find case by ID.
            description: Returns a single case with the provided ID.
            operationId: getCaseByID
            parameters:
                - name: id
                  in: path
                  description: ID of case to return.
                  required: true
                  schema:
                      type: integer
                      format: int64
            responses:
                "200":
                    description: Successfully retrieved case.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Case"
                "400":
                    description: Sorry! Couldn't find case with the ID provided.
                "404":
                    description: Sorry! Case with the ID not found.
                "500":
                    description: Internal server error. Please try again later.

        # @PUT /case/{id}
        put:
            tags:
                - case
            summary: Update a case.
            description: Update details of a case using ID.
            operationId: updateCase
            parameters:
                - name: id
                  in: path
                  description: ID of the case to be updated.
                  required: true
                  schema:
                      type: integer
                      format: int64

            responses:
                "201":
                    description: Successfully updated case with the provided ID.
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Case"
                "400":
                    description:  Sorry! Couldn't find case with the ID provided.
                "404":
                    description: Sorry! Case with the ID not found.
                "500":
                    description: Internal server error. Please try again later.

            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/Case"
                description: Updated case object with the ID provided.
                required: true

        # @DELETE /cases/{id}
        delete:
            tags:
                - case
            summary: Delete a case.
            description: Delete an existing case.
            operationId: deleteCase
            parameters:
                - name: id
                  in: path
                  description: ID of the case to be deleted.
                  required: true
                  schema:
                      type: integer
                      format: int64
            responses:
                "204":
                    description: Case deleted sucessfully.
                    content:
                        application/json:
                            schema:
                                type: string
                                format: int64
                                example: "290cdddc-31af-481c-9000-2ab4eabeebaf"
                "400":
                    description: Sorry! Couldn't find case with the ID provided.
                "404":
                    description: Sorry! Case with the ID not found.
                "500":
                    description: Internal server error. Please try again later.

# Reusable component schemas
components:
    schemas:
        # CaseManager schema
        CaseManager:
            type: object
            properties:
                caseManagerId:
                    type: string
                    format: int64
                    example: "378cdddc-31af-481c-9000-2ab4eabeebaf"
                createdAt:
                    type: string
                    format: date-time
                    example: "2021-01-30T08:30:00Z"
                modifiedAt:
                    type: string
                    format: date-time
                    example: "2021-01-31T08:30:00Z"
                username:
                    type: string
                    example: "johndoe"
                firstName:
                    type: string
                    example: "John"
                lastName:
                    type: string
                    example: "Doe"
                phone:
                    type: integer
                    example: 8623817665
                email:
                    type: string
                    format: email
                    example: "johndoe@cm.io"
                cases:
                    type: array
                    items:
                        $ref: "#/components/schemas/Case"

            required:
                - username
                - firstName
                - lastName
                - email
                - phone

        # Case schema
        Case:
            type: object
            properties:
                caseId:
                    type: string
                    format: int64
                    example: "36005a82-a612-4dc1-9279-7215df6895cd"
                createdAt:
                    type: string
                    format: date-time
                    example: "2021-03-30T08:30:00Z"
                modifiedAt:
                    type: string
                    format: date-time
                    example: "2021-04-28T08:30:00Z"
                status:
                    type: string
                    example: Active
                category:
                    type: string
                    example: Eye
                assignedTo:
                    nullable: true
                    $ref: "#/components/schemas/Assignee"
                severity:
                    type: string
                    example: "0-Critical Impact"
                subject:
                    type: string
                    example: "Operation follow-up"
                patientDetail:
                    $ref: "#/components/schemas/Patient"
                solution:
                    $ref: "#/components/schemas/Solution"
                milestones:
                    type: array
                    items:
                        $ref: "#/components/schemas/Milestone"
                activities:
                    type: array
                    items:
                        $ref: "#/components/schemas/Activity"
            
            required:
                - status
                - category
                - severity
                - subject
                - patientDetail
                - solution
        
        # Assignee schema
        Assignee:
            type: object
            properties:
                id:
                    type: string
                    format: int64
                    example: "26005a82-a612-4dc1-9279-7215df6895cd"
                firstName:
                    type: string
                    example: "Katherine"
                lastName:
                    type: string
                    example: "Marshall"
                assignedOn:
                    type: string
                    format: date-time
                    example: "2021-03-30T08:30:00Z"
                profession:
                    type: string
                    example: "Ophthalmologists"
                phone:
                    type: integer
                    example: 8452877665
                email:
                    type: string
                    format: email
                    example: "kathmarshall@hm.io"

            required:
                - firstName
                - lastName
                - severity
                - phone
                - email

        # Patient schema
        Patient:
            type: object
            properties:
                id:
                    type: string
                    format: int64
                    example: "46005a82-a612-4dc1-9279-7215df6895cd"
                firstName:
                    type: string
                    example: "Matt"
                lastName:
                    type: string
                    example: "Turner"
                userName:
                    type: string
                    example: "mattturner10"
                phone:
                    type: integer
                    example: 9452877662
                email:
                    type: string
                    format: email
                    example: "mattturner@gmail.com"

            required:
                - firstName
                - lastName
                - userName
                - phone
                - email

        # Solution schema
        Solution:
            type: object
            properties:
                solutionSubject:
                    type: string
                    example: "Operate eye disease."
                investigation:
                    type: string
                    example: "Diseases on the left eye and abnormal eye development and function."
                resolution:
                    type: string
                    example: "Successfully operate on disease on the left eye and normal eye development and function."

            required:
                - solutionSubject
                - investigation
                - resolution

        # Milestone schema
        Milestone:
            type: object
            properties:
                id:
                    type: string
                    format: int64
                    example: "30027811-1ddb-4135-bb94-3a68aae1491c"
                createdAt:
                    type: string
                    format: date-time
                    example: "2022-10-21T01:12:23.926Z"
                description:
                    type: string
                    example: "Home therapy for left eye before surgery."

            required:
                - description
        
        # Activity schema
        Activity:
            type: object
            properties:
                id:
                    type: string
                    format: int64
                    example: "a7a32579-d7c3-45ef-8b5f-8eac996db599"
                createdAt:
                    type: string
                    format: date-time
                    example: "2022-10-21T01:14:27.516Z"
                description:
                    type: string
                    example: "Uploaded X-Ray report."
            
            required:
                - description

        # Pagination schema
        PaginatedResult:
            type: object
            properties:
                total:
                    type: number
                page:
                    type: number
                perPage:
                    type: number
                hasNext:
                    type: boolean
                hasPrev:
                    type: boolean
                results:
                    type: array
                    items:
                        # any number of items 
                        {}
